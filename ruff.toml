# Ruff default config: https://docs.astral.sh/ruff/configuration/
# Ruff rules: https://docs.astral.sh/ruff/rules/#pydocstyle-d

extend-include = ["*.ipynb"]

target-version = "py310"

line-length = 110 # a good balance of reading ergonomics and code density
indent-width = 4

[lint]
select = [
    "F",   # pyFlakes (enabled by default)
    "E",   # pycodestyle - Errors, a subset [E4, E7, E9] is enabled by default
    "W",   # pycodestyle - Warnings
    "C90", # mccabe Complexity
    "I",   # Isort
    "N",   # pep8-Naming
    "D",   # pyDocstyle
    "UP",  # pyUPgrade
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "B",   # flake8-Bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EM",  # flake8-errmsg
    "FA",  # flake8-future-annotations
    "LOG", # flake8-logging
    "G",   # flake8-logging-format
    "PIE", # flake8-pie
    # "T20", # flake8-print # TODO: enable after logger is ready
    "PT",   # flake8-pytest-style
    "Q",    # flake8-Quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "TD",   # flake8-todo
    "ERA",  # eradicate
    "PD",   # pandas-vet
    "PL",   # Pylint
    "C",    # Convention
    "TRY",  # tryceratops
    "NPY",  # NumPy-specific rules
    "PERF", # Perflint
    "RUF",  # Ruff-specific rules
]

ignore = [
    "D100",  # undocumented-public-module
    "D101",  # undocumented-public-class
    "D107",  # undocumented-public-init
    "G004",  # Logging statement uses f-string
    "PD003", # pandas-use-of-dot-is-null [false alarm on xarray]
    "PD011", # pandas-use-of-dot-values [false alarm on xarray]
    "PT019", # pytest-fixture-param-without-value
    "S607",  # start-process-with-partial-path
    "TD002", # missing-todo-author
    "TD003", # missing-todo-link
]

[lint.per-file-ignores]
"tests/*" = ["S", "PL", "D101"]

[lint.mccabe] # Rule C90
max-complexity = 10 # max cyclomatic complexity threshold

[lint.pydocstyle]
convention = "google" # Accepts: "google", "numpy", or "pep257".

[format]
docstring-code-format = true
